[project]
name = "fastapi-zero"
version = "0.1.0"
description = ""
authors = [
    {name = "Luiz Franze",email = "luizcarlos.k2@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "fastapi[standard] (>=0.115.12,<0.116.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.8"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"


[tool.ruff]
line-length = 79
extend-exclude = ['migrations']
# Excluindo mogrations pois futuramente essa pasta tera codigo gerado
# automaticamente e nao queremos o ruff alterando este codigo.

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

# I (Isort): Checagem de ordenação de imports em ordem alfabética
# F (Pyflakes): Procura por alguns erros em relação a boas práticas de código
# E (Erros pycodestyle): Erros de estilo de código
# W (Avisos pycodestyle): Avisos de coisas não recomendadas no estilo de código
# PL (Pylint): Como o F, também procura por erros em relação a boas práticas de código
# PT (flake8-pytest): Checagem de boas práticas do Pytest

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'


[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev fast_zero/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fastapi_zero -vv'
post_test = 'coverage html'